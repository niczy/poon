name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run integration tests daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  integration:
    runs-on: ubuntu-latest
    
    services:
      # We might need a test database or other services in the future
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          poon-web/package-lock.json
          poon-proto/package-lock.json

    - name: Install Protocol Buffers compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install Go protobuf plugins
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Generate protobuf files
      run: |
        cd poon-proto
        mkdir -p gen/go gen/js gen/python gen/ts
        protoc --go_out=gen --go_opt=paths=source_relative --go-grpc_out=gen --go-grpc_opt=paths=source_relative --proto_path=. monorepo.proto
        mv gen/monorepo*.pb.go gen/go/

    - name: Build all Go components
      run: |
        echo "Building poon-server..."
        cd poon-server && go build -o poon-server . && cd ..
        
        echo "Building poon-git..."
        cd poon-git && go build -o poon-git . && cd ..
        
        echo "Building poon-cli..."
        cd poon-cli && go build -o poon-cli . && cd ..

    - name: Install Node.js dependencies
      run: |
        cd poon-proto && npm ci && cd ..
        cd poon-web && npm ci && cd ..

    - name: Build poon-web
      run: |
        cd poon-web
        npm run build

    - name: Start test servers in background
      run: |
        cd poon-server
        ./poon-server &
        SERVER_PID=$!
        echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
        
        cd ../poon-git
        ./poon-git &
        GIT_PID=$!
        echo "GIT_PID=$GIT_PID" >> $GITHUB_ENV
        
        # Wait for servers to start
        sleep 5

    - name: Run integration tests
      run: |
        cd poon-tests
        chmod +x scripts/run_test.sh
        ./scripts/run_test.sh

    - name: Run component tests
      run: |
        for component in poon-git poon-server poon-cli poon-proto poon-web; do
          echo "Testing $component..."
          cd $component
          chmod +x scripts/run_test.sh
          ./scripts/run_test.sh
          cd ..
        done

    - name: Stop test servers
      if: always()
      run: |
        kill $SERVER_PID || true
        kill $GIT_PID || true

    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          poon-server/poon-server
          poon-git/poon-git
          poon-cli/poon-cli
          poon-web/.next/
        retention-days: 7

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-logs
        path: |
          **/*.log
          poon-tests/logs/
        retention-days: 7
        if-no-files-found: ignore